/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package boligen

import kotlinx.serialization.*
import io.ktor.application.*
import io.ktor.features.*
import io.ktor.serialization.*
import io.ktor.request.*
import io.ktor.response.*
import io.ktor.routing.*
import io.ktor.http.*
import io.ktor.server.netty.Netty
import io.ktor.server.engine.embeddedServer
import io.ktor.gson.*

val userStorage: HashMap<String, User> = HashMap()

@Serializable
data class User(val name:String)

fun main(args: Array<String>) {

    
    embeddedServer(Netty, 8080) {

        install(ContentNegotiation) {
            gson()
        }
        
        routing {
            get("/") {
                call.respondText("Hello, World!")
            }
            get("/user/laila") {
                call.respondText("Hello laila")
            }
            get("/user/{name}") {
                val name = call.parameters["name"]
                if ( name == "admin") {
                    call.respondText("Hello admin")
                } else {
                    call.respondText("Hello " + name)
                }
            }
            get("/user") {
                
                call.respondText(userStorage.values.joinToString() { it.toString() + ", "})
            }
            post("/user") {
                val user = call.receive<User>()
                //val user = User("magnolia")
                userStorage.put(user.name, user)
                call.respondText("User created", status = HttpStatusCode.Created)
            }

        }
    }.start(wait = true)
}
